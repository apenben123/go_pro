// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package iuct_client

import (
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
	"os"
	"test/gothrift/com_types"
	"test/gothrift/iuct_service"
	"test/gothrift/iuct_types"
	"time"
)

var _ = com_types.GoUnusedProtection__
var _ = iuct_types.GoUnusedProtection__

var (
	tSTimeout = 0 * time.Millisecond
	tSCost    = 1 * time.Second
	tCTimeout = 2 * time.Second
)

func getIuctClient() *iuct_service.IuctThriftServiceClient {

	hosts := "192.168.49.212:15491"

	t, err := thrift.NewTSocketTimeout(hosts, tCTimeout)
	if err != nil {
		fmt.Fprintln(os.Stderr, "error resolving address:", err)
		os.Exit(1)
	}

	//defer t.Close()
	if err := t.Open(); err != nil {
		fmt.Fprintln(os.Stderr, "Error opening socket to ", hosts, " ", err)
		os.Exit(1)
	}

	tFactory := thrift.NewTFramedTransportFactory(thrift.NewTTransportFactory())
	trans := tFactory.GetTransport(t)
	f := thrift.NewTBinaryProtocolFactoryDefault()
	return iuct_service.NewIuctThriftServiceClientFactory(trans, f)
}

func RPCGetProgramHits(nPid int64) int32 {
	client := getIuctClient()
	defer client.Transport.Close()

	req := iuct_service.NewUserCenterUserReq()
	zipkin := com_types.NewZipkinHeader()
	req.NUid = 50001706
	var (
		nInId1       = nPid
		nInId2 int64 = 1
		nInId3 int64 = 0
	)
	req.NInId1 = &nInId1
	req.NInId2 = &nInId2
	req.NInId3 = &nInId3

	resp, err := client.RPCDoGetProgramHitsRequest(req, zipkin)
	if err != nil {
		fmt.Fprintln(os.Stderr, "RPCDoGetProgramHitsRequest fail:", err)
		os.Exit(1)
	}

	fmt.Printf("%+v\n", resp)
	//num := *resp.NOutId1
	if resp.IsSetNOutId2() {
		fmt.Printf("out1=%d out2=%d\n", *resp.NOutId1, *resp.NOutId2)
	} else {
		fmt.Printf("out1=%d\n", *resp.NOutId1)
	}
	return int32(*resp.NOutId1)
}
